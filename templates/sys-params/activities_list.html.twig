{% extends '@contact-core/layout_backend.html.twig' %}
{% import "@contact-core/macros/generals.html.twig" as generals %}
{% import '@contact-core/macros/form_type.html.twig' as fields %}
{% import '@contact-core/macros/form_classic.html.twig' as forms %}

{% block shoulder %}
	{{ "Paramétrages" }}
{% endblock shoulder %}

{% block title %}
	<i class="fas mr-2 link--icon fa-building"></i>
	{{ title }}
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
{% endblock %}

{% block main %}
	{% set urlForm = path('sys-params-rcategories-list') %}
	<div class="container col-12 row">
		<div class="col-7 list">
			{{ forms.switchTextSides('toggle_status', false, {
				rtext: 'Voir toutes les secteurs', ltext: 'Les secteurs paramétrés',
				lclass: 'col-4', rclass: 'col-4', class: "col-12",
				lbckgrd: "#00CC00", rbckgrd: "#CC0000", form: 'h', between: 1,
				})
			}}
			<div class="list_tab col-12 row">
			{% for paramList in paramsList %}
				{% if loop.first %}
				<div class="line_tab tabHeader col-12 row mx-0 px-0 border boder-dark py-1">
					<div class="category col-2 mx-0 px-0 text-center">Secteur</div>
					<div class="category col-2 mx-0 px-0 text-center">Sous Secteur</div>
					<div class="description col-5 mx-0 px-0">Description</div>
					<div class="actions col-3 mx-0 px-0 text-center">Actions</div>
				</div>
				{% endif %}
				<div class="line_tab tabBody col-12 mx-0 px-0 border boder-dark py-1 text-center">
					<div class="category col-2 mx-0 px-0 text-center">{{ paramList.name }}</div>
					<div class="category col-2 mx-0 px-0 text-center"></div>
					<div class="description col-5 mx-0 px-0">{{ paramList.description }}</div>
					<div class="actions col-3 mx-0 px-0 text-center">
					{% if paramList.updated is empty %}
						{{ generals.btn('edt' ~ paramList.id, '<i class="fa fa-pen"></i>', {
							class:'col-5 btn btn-success p-0 m-0', title:'Editer lE SECTEUR',
							bclass:'btn btn-success p-0 m-auto col-12', dataset: {'paramId': paramList.id},
							event: 'onClick', codeJS:'editRef(' ~ paramList.id ~')',
						}) }}
						{{ generals.btn('del' ~ paramList.id, '<i class="fa fa-trash"></i>', {
							class:'col-5 btn btn-warning row m-0 p-0', title:'Supprimer lE SECTEUR',
							bclass:'btn btn-warning p-0 m-auto col-12', dataset: {'id': paramList.id},
							event: 'onClick', codeJS:'deltRef(' ~ paramList.id ~')',
						}) }}
					{% else %}
						{{ generals.btn('act' ~ paramList.id, '<i class="fa fa-cycle"></i>', {
							class:'col-5 btn btn-info p-0 m-0', title:'Réactiver le secteur',
							bclass:'btn btn-success p-0 m-auto col-12', dataset: {'paramId': paramList.id},
							event: 'onClick', codeJS:'actvRef(' ~ paramList.id ~')',
						}) }}
					{% endif %}
						{{ generals.btn('ups' ~ child.id, '<i class="fa fa-plus"></i>', {
							class:'col-5 btn btn-primary row m-0 p-0', title:'Ajouter un sous-secteur en secteur',
							bclass:'btn btn-primary p-0 m-auto col-12', dataset: {'id': child.id},
							event: 'onClick', codeJS:'moreRef(' ~ child.id ~')',
						}) }}
					</div>
				</div>
				{% for child in paramList.children %}
				<div class="line_tab tabBody col-12 mx-0 px-0 border boder-dark py-1 text-center">
					<div class="category col-2 mx-0 px-0 text-center"></div>
					<div class="category col-2 mx-0 px-0 text-center">{{ child.name }}</div>
					<div class="description col-5 mx-0 px-0">{{ child.description }}</div>
					<div class="actions col-3 mx-0 px-0 text-center">
					{% if child.updated %}
						{{ generals.btn('edt' ~ child.id, '<i class="fa fa-pen"></i>', {
							class:'col-5 btn btn-success p-0 m-0', title:'Editer le sous-secteur',
							bclass:'btn btn-success p-0 m-auto col-12', dataset: {'paramId': child.id},
							event: 'onClick', codeJS:'editRef(' ~ child.id ~')',
						}) }}
						{{ generals.btn('del' ~ child.id, '<i class="fa fa-trash"></i>', {
							class:'col-5 btn btn-warning row m-0 p-0', title:'Supprimer le sous-secteur',
							bclass:'btn btn-warning p-0 m-auto col-12', dataset: {'id': child.id},
							event: 'onClick', codeJS:'deltRef(' ~ child.id ~')',
						}) }}
					{% else %}
						{{ generals.btn('act' ~ child.id, '<i class="fa fa-cycle"></i>', {
							class:'col-5 btn btn-info p-0 m-0', title:'Réactiver le sous-secteur',
							bclass:'btn btn-success p-0 m-auto col-12', dataset: {'paramId': child.id},
							event: 'onClick', codeJS:'actvRef(' ~ child.id ~')',
						}) }}
					{% endif %}
						{{ generals.btn('ups' ~ child.id, '<i class="fa fa-trash"></i>', {
							class:'col-5 btn btn-primary row m-0 p-0', title:'Passer le sous-secteur en secteur',
							bclass:'btn btn-primary p-0 m-auto col-12', dataset: {'id': child.id},
							event: 'onClick', codeJS:'upstRef(' ~ child.id ~')',
						}) }}
					</div>
				</div>
				{% endfor %}
			{% else %}
				<div class="line_tab tabHeader col-12 row mx-0 px-0 border boder-dark py-1">
					<div class="category col-2 mx-0 px-0 text-center">Secteur</div>
					<div class="category col-2 mx-0 px-0 text-center">Sous Secteur</div>
					<div class="description col-5 mx-0 px-0">Description</div>
					<div class="actions col-3 mx-0 px-0 text-center">Actions</div>
				</div>
				<div class="line_tab tabBody col-12 mx-0 px-0 border boder-dark py-1 text-center">
					Pas encore de secteur d'activité enregistré
				</div>
			{% endfor %}
			</div>
		</div>
		<div class="col-5 rc_form row">
			<h2 class="col-12 text-center title">Ajouter une catégorie</h2>
			<hr class="col-12">
			{{ form_start(form, {'action': urlForm, 'method': 'POST'}) }}
			{{ form_row(form._token) }}

			{{ fields.field(form.name, '', {
				'class': 'col-12 mx-0 px-0 mb-2 sName'
				'il_class': {'label': 'col-6 mx-0 px-0', 'input': 'col-6 mx-0 px-0'}
			}) }}

			{{ fields.field(form.description, '', {
				'class': 'col-12 mx-0 px-0 mb-2 sDescription',
				'il_class': {'label': 'col-6 mx-0 px-0', 'input': 'col-6 mx-0 px-0'}
			}) }}
			{{ fields.hidden(form.parent_id, '', {}) }}

			{{ fields.submitbtn(form.record, '', {
				'class': 'col-12 mx-0 px-0 btn-success',
			}) }}

			{{ form_end(form, {render_rest: false}) }}
			<div class="col-12 mt-2 text-right text-gray-600 px-0 mx-3">
				* champs obligatoires
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>

		function editRef(id) {
			let url = "/bcknd/sys_params/activities_form/"+id
			let notif_area = document.querySelector(".admin__notifications")
            fetch(url, { method: "GET", }).then(function (response) {
				return response.json()
			}).then(function(reponse){
                show_toast(reponse.type, reponse.message, notif_area)
				if (reponse.type == "success") {
					let formular = document.querySelector('.rc_form')
					formular.querySelector('h2').innerHTML = "Modifier une catégorie"
					formular.querySelector('.sName input').value = reponse.category
					formular.querySelector('.sDescription input').value = reponse.description
					formular.querySelector('.sParentId input').value = reponse.parentId
				}
            })
		}

		function deltRef(id) {
			let url = "/bcknd/sys_params/activities_delt/"+id
			let notif_area = document.querySelector(".admin__notifications")
			fetch(url, { method: "DELETE", }).then(function(response){
				return response.json()
			}).then(function(reponse){
				if (reponse.type == "success") {
					document.querySelector("#toggle_status").checked = false
					document.querySelector(".sName input").value = ""
					document.querySelector(".sDescription input").value = ""
					formular.querySelector('.sParentId input').value = ""
					location.reload()
				} else {
	                show_toast(reponse.type, reponse.message, notif_area)
				}
			})
		}

		function actvRef(id) {
			let url = "/bcknd/sys_params/activities_actv/"+id
			let notif_area = document.querySelector(".admin__notifications")
			fetch(url, { method: "POST", }).then(function(response){
				return response.json()
			}).then(function(reponse){
				if (reponse.type == "success") {
					document.querySelector("#toggle_status").checked = false
					document.querySelector(".sName input").value = ""
					document.querySelector(".sDescription input").value = ""
					formular.querySelector('.sParentId input').value = ""
					location.reload()
				} else {
					show_toast(reponse.type, reponse.message, notif_area)
				}
			})
		}

		function upstRef(id) {
			let url = "/bcknd/sys_params/activities_upst/"+id
			let notif_area = document.querySelector(".admin__notifications")
			fetch(url, { method: "POST", }).then(function(response){
				return response.json()
			}).then(function(reponse){
				if (reponse.type == "success") {
					document.querySelector("#toggle_status").checked = false
					document.querySelector(".sName input").value = ""
					document.querySelector(".sDescription input").value = ""
					formular.querySelector('.sParentId input').value = ""
					location.reload()
				} else {
					show_toast(reponse.type, reponse.message, notif_area)
				}
			})
		}

		function moreRef(id) {
			// affectation de la variable cachée ID prant avec id
			document.querySelector(".sParentId input").value = id
			document.querySelector(".rc_form .title").innerHTML = "Ajouter un sous secteur"
		}

		function noResult() {
			let divItem = document.createElement('div')
			divItem.classList.add('line_tab', 'tabBody', 'col-12', 'mx-0', 'px-0', 'border', 'boder-dark', 'py-1', 'text-center', 'tabBody')
			divItem.innerHTML = 'Pas encore de catégorie enregistrée et active'
			return divItem
		}

		function formatLine(item) {
		}

		document.querySelector("#toggle_status").addEventListener('click', function(event){
			let notif_area = document.querySelector(".admin__notifications")
			// true => OFF, false = ON
			let url = "/bcknd/sys_params/activities_toggle/"+this.checked
            fetch(url, { method: "GET", }).then(function (response) {
				return response.json()
			}).then(function(reponse){
				show_toast(reponse.type, reponse.message, notif_area)
				// remplacement des lignes du tableau RéseauxSociaux par le retour de fonction
				// => suppresdsion de l'existant
				document.querySelectorAll(".tabBody").forEach(el => el.remove());
				let listTab = document.querySelector(".list_tab")
				// => création des lignes ou de la ligne si aucun résultat retourné
				let networkList = reponse.paramsList
				if (networkList.length == 0) {
					listTab.appendChild(noResult())
				} else {
					networkList.forEach(element => {
						listTab.appendChild(formatLine(element))
					});
				}
			})
		})
	</script>
{% endblock %}
