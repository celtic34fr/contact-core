{% extends '@contact-core/layout_backend.html.twig' %}
{% import '@contact-core/macros/form_type.html.twig' as fields %}
{% import '@contact-core/macros/form_classic.html.twig' as forms %}

{% block shoulder %}
	{{ "Paramétrages" }}
{% endblock shoulder %}

{% block title %}
	<i class="fas mr-2 link--icon fa-building"></i>
	{{ title }}
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
{% endblock %}

{% block main %}
	{#
	=> page en 2 colonnes :
		gauche : table des catégories actives avec un bouton de bascule pour avoir toutes ou les actives
		droite : formulaire proprement dit pour la saisie ou modification d'une catégories
	#}
	{% set urlForm = path('sys-params-rcategories-list') %}
	<div class="container col-12 row">
		<div class="col-7 list">
			{{ 
				forms.switchTextSides('toggle_status', false, {
					rtext: 'Voir toutes les catégories', ltext: 'Les catégories paramétrées',
					lclass: 'col-4', rclass: 'col-4', class: "col-12",
					lbckgrd: "#00CC00", rbckgrd: "#CC0000", form: 'h', between: 1,
				})
			}}
			<div class="list_tab col-12 row">
			{% for paramList in paramsList %}
				{% if loop.first %}
				<div class="line_tab tabHeader col-12 row mx-0 px-0 border boder-dark py-1">
					<div class="category col-2 mx-0 px-0 text-center">Catégorie</div>
					<div class="description col-7 mx-0 px-0">Description</div>
					<div class="actions col-3 mx-0 px-0 text-center">Actions</div>
				</div>
				{% endif %}
				<div class="line_tab tabBody col-12 row mx-0 px-0 border boder-dark py-1">
					<div class="category col-2 mx-0 px-0 text-center">{{ paramList.name }}</div>
					<div class="description col-7 mx-0 px-0">{{ paramList.description }}</div>
					<div class="actions col-3 mx-0 px-0 text-center">
					{% if paramList.updated is not empty %}
						{{ generals.btn('edt' ~ paramList.id, '<i class="fa fa-pen"></i>', {
							class:'col-5 btn btn-success p-0 m-0', title:'Editer la catégorie',
							bclass:'btn btn-success p-0 m-auto col-12', dataset: {'paramId': paramList.id},
							event: 'onClick', codeJS:'editRef(' ~ paramList.id ~')',
						}) }}
						{{ generals.btn('del' ~ paramList.id, '<i class="fa fa-trash"></i>', {
							class:'col-5 btn btn-warning row m-0 p-0', title:'Supprimer la catégorie',
							bclass:'btn btn-warning p-0 m-auto col-12', dataset: {'id': paramList.id},
							event: 'onClick', codeJS:'deltRef(' ~ paramList.id ~')',
						}) }}
					{% else %}
						{{ generals.btn('act' ~ paramList.id, '<i class="fa fa-cycle"></i>', {
							class:'col-5 btn btn-info p-0 m-0', title:'Réactiver la catégorie',
							bclass:'btn btn-success p-0 m-auto col-12', dataset: {'paramId': paramList.id},
							event: 'onClick', codeJS:'actvRef(' ~ paramList.id ~')',
						}) }}
					{% endif %}
				</div>
			{% else %}
				<div class="line_tab tabHeader col-12 row mx-0 px-0 border boder-dark py-1">
					<div class="category col-2 mx-0 px-0 text-center">Catégorie</div>
					<div class="description col-7 mx-0 px-0">Description</div>
					<div class="actions col-3 mx-0 px-0 text-center">Actions</div>
				</div>
				<div class="line_tab tabBody col-12 mx-0 px-0 border boder-dark py-1 text-center">
					Pas encore de catégorie enregistrée
				</div>
			{% endfor %}
			</div>
		</div>
		<div class="col-5 rc_form row">
			<h2 class="col-12 text-center">Ajouter une catégorie</h2>
			<hr class="col-12">
			{{ form_start(form, {'action': urlForm, 'method': 'POST'}) }}
			{{ form_row(form._token) }}

			{{ fields.field(form.name, '', {
				'class': 'col-12 mx-0 px-0 mb-2 sName',
				'il_class': {'label': 'col-6 mx-0 px-0', 'input': 'col-6 mx-0 px-0'}
			}) }}

			{{ fields.field(form.description, '', {
				'class': 'col-12 mx-0 px-0 mb-2 sDescription',
				'il_class': {'label': 'col-6 mx-0 px-0', 'input': 'col-6 mx-0 px-0'}
			}) }}

			{{ fields.submitbtn(form.record, '', {
				'class': 'col-12 mx-0 px-0 btn-success',
			}) }}

			{{ form_end(form, {render_rest: false}) }}
			<div class="col-12 mt-2 text-right text-gray-600 px-0 mx-3">
				* champs obligatoires
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}

	<script>
		document.querySelector("#toggle_status").addEventListener('click', function(event){
			let notif_area = document.querySelector(".admin__notifications")
			// true => OFF, false = ON
			let url = "/bcknd/sys_params/rcategories_toggle/"+this.checked
            fetch(url, { method: "GET", }).then(function (response) {
				return response.json()
			}).then(function(reponse){
				show_toast(reponse.type, reponse.message, notif_area)
				// remplacement des lignes du tableau RéseauxSociaux par le retour de fonction
				// => suppresdsion de l'existant
				document.querySelectorAll(".tabBody").forEach(el => el.remove());
				let listTab = document.querySelector(".list_tab")
				// => création des lignes ou de la ligne si aucun résultat retourné
				let networkList = reponse.paramsList
				if (networkList.length == 0) {
					listTab.appendChild(noResult())
				} else {
					networkList.forEach(element => {
						listTab.appendChild(formatLine(element))
					});
				}
			})
		})

		document.addEventListener('submit', function (event) {
			event.preventDefault()
			event.stopPropagation
			submitFormRef(event)
		})

		function submitFormCat(evt) {
			evt.preventDefault
			evt.stopPropagation

			let url = "/bcknd/sys_params/rcategories_form"
			let formDatas = new FormData(evt.target)
			/*
			let previewDiv = evt.target.querySelector(".dragdrop .gallery .img_preview")
			let logoId = previewDiv.querySelector('i').dataset.fileId
			formDatas.append('logoId', logoId)
			*/
            fetch(url, { 
				method: "POST",
				headers: {'X-Requested-With': 'XMLHttpRequest'},
				body: formDatas
	  		}).then(function (response) {
            })
		}

		function editRef(id) {
			let url = "/bcknd/sys_params/rcategories_form/"+id
			let notif_area = document.querySelector(".admin__notifications")
            fetch(url, { method: "GET", }).then(function (response) {
				return response.json()
				}).then(function(reponse){
                show_toast(reponse.type, reponse.message, notif_area)
				let formular = document.querySelector('.rc_form').innerHTML
				formular.querySelector('h2').innerHTML = "Modifier une catégorie"
				formular.querySelector('.sName input').value = reponse.name
				formular.querySelector('.sDescription input').value = reponse.description
            })
		}

		function deltRef(id) {
			let url = "/bcknd/sys_params/rcategories_delt/"+id
			let notif_area = document.querySelector(".admin__notifications")
			fetch(url, { method: "DELETE", }).then(function(response){
				return response.json()
			}).then(function(reponse){
                show_toast(reponse.type, reponse.message, notif_area)
				/*
				let formular = document.querySelector(".sn_form")
				formular.querySelector('.sName input').value = ""
				formular.querySelector(".sId input").value = 0
				removeLogo(formular.querySelector(".gallery"), reponse.sLogo)
				*/
			})
		}

		function actvRef(id) {
			let url = "/bcknd/sys_params/rcatégories_actv/"+id
			let notif_area = document.querySelector(".admin__notifications")
			fetch(url, { method: "POST", }).then(function(response){
				return response.json()
			}).then(function(reponse){
                show_toast(reponse.type, reponse.message, notif_area)
				/*
				let formular = document.querySelector(".sn_form")
				formular.querySelector('.sName input').value = reponse.name
				formular.querySelector('.sUrl input').value = reponse.urlPage
				showLogo(formular.querySelector(".gallery"), reponse.logoID)
				*/
			})
		}

		function noResult() {
			let divItem = document.createElement('div')
			divItem.classList.add('line_tab', 'tabBody', 'col-12', 'mx-0', 'px-0', 'border', 'boder-dark', 'py-1', 'text-center', 'tabBody')
			divItem.innerHTML = 'Pas encore de catégorie enregistrée et active'
			return divItem
		}

		function formatLine(item) {
			let divItem = document.createElement('div')
			divItem.classList.add('line_tab', 'tabBody', 'col-12', 'row', 'mx-0', 'px-0', 'border', 'border-dark', 'py-1')

			let divName = document.createElement('div')
			divName.classList.add('name', 'col-2', 'mx-0', 'px-0', 'text-center')
			divName.innerHTML = item.name
			divItem.appendChild(divName)
			let divDescription = document.createElement('div')
			divDescription.classList.add('description', 'col-7', 'mx-0', 'px-0')
			divDescription.innerHTML = item.description
			divItem.appendChild(divDescription)
			let divActions = document.createElement('div')
			divActions.classList.add('actions', 'col-3', 'mx-0', 'px-0', 'text-center')
			let datasets = { 'paramId': item.id }
			let btnEArgs = {
				type: 'edt', id: item.id, ico: 'pen', classes: 'col-5 btn btn-success p-0 m-0',
				title:'Editer la référence',bclass:'btn btn-success p-0 m-auto col-12',
				event: 'onClick', codeJS:'editRef(' + item.id + ')', dataset: datasets
			}
			let btnedit = createBtn('edt' + item.id, '', btnEArgs)
			divActions.appendChild(btnedit)
			let btndelt = createBtn('del' + item.id, '', {
				type: 'del', id: item.id, ico: 'trash', classes: 'col-5 btn btn-warning row m-0 p-0',
				title:'Supprimer la référence',bclass:'btn btn-warning p-0 m-auto col-12',
				event: 'onClick', codeJS:'deltRef(' + item.id + ')', dataset: datasets
			})
			divActions.appendChild(btndelt)
			divItem.appendChild(divActions)
			return divItem
		}
	</script>

	{% include "@contact-core/includes/_show_toast.html.twig" %}
{% endblock %}
