{% extends '@contact-core/layout_backend.html.twig' %}
{% import '@contact-core/macros/form_type.html.twig' as fields %}

{% block shoulder %}
	{{ "Param√©trages" }}
{% endblock shoulder %}

{% block title %}
	<i class="fas mr-2 link--icon fa-building"></i>
	{{ title }}
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
{% endblock %}

{% block main %}
	{% set urlForm %}
		{% if mode == "new" %}
			{{ path(mode~'-params-list') }}
		{% elseif mode == "edt" %}
			{{ path(mode~'-params-list', {'id': id}) }}
		{% else %}
			#
		{% endif %}
	{% endset %}
	{{ form_start(form, {'action': urlForm, 'method': 'POST'}) }}
		{{ form_row(form._token) }}

		{{ fields.field(form.name, "", {
			'il_class': {'label': 'col-4', 'input': 'col-8', 'value': form.name.vars.value},
			'class': 'col-12 my-3',
		}) }}
		{{ fields.field(form.description, "", {
			'il_class': {'label': 'col-4', 'input': 'col-8', 'value': form.description.vars.value},
			'class': 'col-12 my-3',
		}) }}

		<div class="col-12 row">
			{{ form_label(form.values) }}
			{{ form_errors(form.values) }}
			<ul class="values col-12 row"
				data-index="{{ form.values.children|length > 0 ? (form.values.children|last).vars.name + 1 : 0 }}" 
				data-prototype="{{ form_widget(form.values.vars.prototype, {'attr': {'class': 'col-10', 'data-ord': '__name__'}})|e('html_attr') }}">
				{% for idx, valueField in form.values %}
					<li class="col-12 row my-2">
						{{ form_widget(valueField, {'attr': {'class': 'col-10', 'data-ord': idx} }) }}
					</li>
				{% endfor %}
			</ul>
			<button type="button" class="add_item_link btn btn-success" data-collection-holder-class="values">
				Ajouter une valeur
			</button>
		</div>
		{{ fields.submitbtn(form.record, "" , {'class': 'col-12 btn btn-primary my-3'}) }}
	{{ form_end(form, {render_rest: false}) }}
	<div class="col-12 mt-2 text-right text-gray-600 px-0 mx-3">
		* champs obligatoires
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}

	<script>
		function addTagFormDeleteLink(item) {
			const removeFormButton = document.createElement('button');
			removeFormButton.classList.add("btn");
			removeFormButton.classList.add("btn-warning");
			removeFormButton.classList.add("col-2");
			removeFormButton.setAttribute('title', 'Supprimer la valeur');
			const removeFormIcon = document.createElement("i");
			removeFormIcon.classList.add("fa");
			removeFormIcon.classList.add("fa-trash");
			removeFormButton.append(removeFormIcon);
			item.append(removeFormButton);

			removeFormButton.addEventListener('click', (e) => {
				e.preventDefault();
				item.remove();
			});
		}

		function addEmptyLi(bouton) {
			const collectionHolder = document.querySelector('.' + bouton.dataset.collectionHolderClass);
			const index = parseInt(collectionHolder.dataset.index);
			const item = document.createElement('li');
			item.classList.add("col-12");
			item.classList.add("row");
			item.classList.add("my-2");
			item.innerHTML = collectionHolder.dataset.prototype.replace(/__name__/g, index);
			if (index < 1) {
				item.setAttribute('disabled', true);
			}
			collectionHolder.appendChild(item);

			collectionHolder.dataset.index ++;
			addTagFormDeleteLink(item);
		}

		document.querySelectorAll('.add_item_link').forEach(btn => {
			btn.addEventListener("click", function (e) {
				addEmptyLi(e.currentTarget);
			});
		});

		document.querySelectorAll('ul.values li').forEach((val) => {
			addTagFormDeleteLink(val)
		});

		document.addEventListener("DOMContentLoaded", function() {
			const bouton = document.querySelector(".add_item_link")
			const valuesNBR = document.querySelectorAll("ul.values li");
			if (valuesNBR.length < 1) {
				addEmptyLi(bouton);
			} else {
				valuesNBR.forEach(val => {
					console.log(val);;
				})
			}
		})
	</script>
{% endblock %}

